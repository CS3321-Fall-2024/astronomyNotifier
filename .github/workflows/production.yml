name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
      - name: Run pytest
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report
          poetry run coverage lcov
      - name: Check coverage percentage
        uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          path: ./coverage.lcov
          min_coverage: 80
          exclude: '**/**/__init__.py tests/**'
          
  vulnerability_scan:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
      - name: Install pip-audit
        run: |
          pip install pip-audit
      - name: Run Vulnerability Scan
        run: |
          poetry run pip-audit

  build:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: |
          docker build -t prashant9711/astronomy_notifier:latest . 
      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Push Docker image to registry
        run: |
          docker push prashant9711/astronomy_notifier:latest

  deploy:
    needs: build
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: SSH into AWS EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_PEM }}
          port: 22
          script: |
            sudo docker ps -a
            sudo docker stop 994ddd6efdb7
            sudo docker container prune -f
            sudo docker image prune -a -f
            sudo docker pull prashant9711/astronomy_notifier:latest
            sudo docker run -e NASA_API="${{ secrets.NASA_API }}" -d -p 5000:5000 prashant9711/astronomy_notifier:latest
            sudo docker ps -a
            sudo docker system df
            
